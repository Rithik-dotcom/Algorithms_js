bubble sort is a sorting method to check neighbour is sorted or not and swap is not sorted this process of sorting keep iterating until 
sorted. repeatation of iteration till the length of the array is for complex arrays to sort a complex array one iteration is not sufficient hence for complex arrays hence we have to keep sorting until whole array(complex) is sorted.


let array = [12, 2, 4, 3,1,21,14,18,15]
let temp ;
function bubbleSort(parameter){
    for(let j=0; j<parameter.length; j++){
    for(let i=0; i<parameter.length; i++){
        if(parameter[i]>parameter[i+1]){
            temp=parameter[i+1]  ;
            parameter[i+1]= parameter[i]
            parameter[i]= temp;
        }
    }
    }
    return parameter
}

console.log(bubbleSort(array))


//Assignment 01  SOLUTION FROM LMS
let array = [1500, 1200, 786, 450, 2000, 2300, 546, 780, 800, 900, 2000];
function bubbleSort(parameter){
    let temp;
    for( let i=0; i<parameter.length; i++){
        for( let j=0; j<parameter.length; j++){
            if(parameter[j]>parameter[j+1]){
                temp = parameter[j];
                parameter[j] = parameter[j+1];
                parameter[j+1] = temp;
            }
        }
    }
  
    return parameter
}

console.log(bubbleSort(array))



Insertion sort




function insertionSort(inputArray) {
for (let i = 1; i < inputArray. length; i++) {
    let currentValue = inputArray[i];// holding the upcoming value
    let j;
    console.log('current value', currentValue)
for (j = i - 1; j >= 0 && inputArray[j] > currentValue; j--) {
     inputArray[j + 1] = inputArray[j]; //changing upcoming value
     
     console.log("upcoming", inputArray)
    }
    inputArray[j + 1] = currentValue; //j is decremented, changing the
                                       //previous value  to current value
    console.log('j value',j)
    console.log('after swap prev value',inputArray)
  }

return inputArray;
}


let myArray = [12, 5, 267, 7, 38, 8, 49, 9, 60];

console. log(insertionSort (myArray) );

 
  
  
